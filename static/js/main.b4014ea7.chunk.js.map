{"version":3,"sources":["NoRowsOverlay.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexDirection","fill","palette","type","fillOpacity","label","marginTop","spacing","CustomNoRowsOverlay","classes","className","width","height","viewBox","aria-hidden","focusable","fillRule","transform","cx","cy","rx","ry","d","margin","extendedIcon","marginRight","buttons","display","justifyContent","padding","title","textAlign","spinner","alignItems","chip","minWidth","fontWeight","fontSize","backgroundColor","border","borderRadius","borderColor","position","borderTop","borderLeft","opacity","transition","content","top","left","color","fontFamily","join","WebkitFontSmoothing","letterSpacing","borderRight","borderBottom","GET_ALL_RESULTS","gql","DELETE_RESULT","CREATE_RESULT","App","useState","name","setName","open","setOpen","selected","setSelected","useQuery","pollInterval","loading","error","data","refetch","columns","field","headerName","flex","renderCell","params","status","badge","Chip","avatar","variant","getChip","value","description","sortable","date","Date","toUTCString","useMutation","onCompleted","update","cache","result","handleUpdateCache","deleteResult","handleUpdateCreateCache","createResult","readQuery","query","index","results","findIndex","Number","id","resultId","slice","writeQuery","concat","handleClose","Alert","props","elevation","size","severity","message","Typography","component","Button","button","startIcon","onClick","forEach","variables","style","hideFooterPagination","showToolbar","hideFooterRowCount","disableSelectionOnClick","autoHeight","checkboxSelection","rowsPerPageOptions","rows","onSelectionChange","e","rowIds","components","noRowsOverlay","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","onChange","target","DialogActions","disabled","trim","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","link","createHttpLink","uri","credentials","client","ApolloClient","InMemoryCache","typePolicies","Query","fields","merge","existing","incoming","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4014ea7.chunk.js","sourcesContent":["import * as React from 'react';\nimport { GridOverlay } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexDirection: 'column',\n        '& .ant-empty-img-1': {\n            fill: theme.palette.type === 'light' ? '#aeb8c2' : '#262626',\n        },\n        '& .ant-empty-img-2': {\n            fill: theme.palette.type === 'light' ? '#f5f5f7' : '#595959',\n        },\n        '& .ant-empty-img-3': {\n            fill: theme.palette.type === 'light' ? '#dce0e6' : '#434343',\n        },\n        '& .ant-empty-img-4': {\n            fill: theme.palette.type === 'light' ? '#fff' : '#1c1c1c',\n        },\n        '& .ant-empty-img-5': {\n            fillOpacity: theme.palette.type === 'light' ? '0.8' : '0.08',\n            fill: theme.palette.type === 'light' ? '#f5f5f5' : '#fff',\n        },\n    },\n    label: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function CustomNoRowsOverlay() {\n    const classes = useStyles();\n\n    return (\n        <GridOverlay className={classes.root}>\n            <svg\n                width=\"120\"\n                height=\"100\"\n                viewBox=\"0 0 184 152\"\n                aria-hidden\n                focusable=\"false\"\n            >\n                <g fill=\"none\" fillRule=\"evenodd\">\n                    <g transform=\"translate(24 31.67)\">\n                        <ellipse\n                            className=\"ant-empty-img-5\"\n                            cx=\"67.797\"\n                            cy=\"106.89\"\n                            rx=\"67.797\"\n                            ry=\"12.668\"\n                        />\n                        <path\n                            className=\"ant-empty-img-1\"\n                            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n                        />\n                        <path\n                            className=\"ant-empty-img-2\"\n                            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n                        />\n                        <path\n                            className=\"ant-empty-img-3\"\n                            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n                        />\n                    </g>\n                    <path\n                        className=\"ant-empty-img-3\"\n                        d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n                    />\n                    <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n                        <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n                        <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n                    </g>\n                </g>\n            </svg>\n            <div className={classes.label}>No Rows</div>\n        </GridOverlay>\n    );\n}","import { useState } from 'react'\nimport './App.css';\nimport { AddIcon, DataGrid } from '@material-ui/data-grid';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CustomNoRowsOverlay from './NoRowsOverlay';\nimport { MetroSpinner } from \"react-spinners-kit\";\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    padding: 10,\n\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  spinner: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh'\n  },\n  chip: {\n    '& .MuiChip-label': {\n      minWidth: \"85px\"\n      // fontWeight: \"bolder\",\n    },\n  },\n  root: {\n    '& .MuiDataGrid-colCellTitle': {\n      display: \"block\",\n      textAlign: \"center\",\n      width: \"100%\",\n      fontWeight: \"bolder\",\n      fontSize: 16,\n    },\n    '& .MuiCheckbox-root svg': {\n      width: 16,\n      height: 16,\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette.type === 'light' ? '#d9d9d9' : 'rgb(67, 67, 67)'\n        }`,\n      borderRadius: 2,\n    },\n    '& .MuiCheckbox-root svg path': {\n      display: 'none',\n    },\n    '& .MuiCheckbox-root.Mui-checked:not(.MuiCheckbox-indeterminate) svg': {\n      backgroundColor: '#1890ff',\n      borderColor: '#1890ff',\n    },\n    '& .MuiCheckbox-root.Mui-checked .MuiIconButton-label:after': {\n      position: 'absolute',\n      display: 'table',\n      border: '2px solid #fff',\n      borderTop: 0,\n      borderLeft: 0,\n      transform: 'rotate(45deg) translate(-50%,-50%)',\n      opacity: 1,\n      transition: 'all .2s cubic-bezier(.12,.4,.29,1.46) .1s',\n      content: '\"\"',\n      top: '50%',\n      left: '39%',\n      width: 5.71428571,\n      height: 9.14285714,\n    },\n    '& .MuiCheckbox-root.MuiCheckbox-indeterminate .MuiIconButton-label:after': {\n      width: 8,\n      height: 8,\n      backgroundColor: '#1890ff',\n      transform: 'none',\n      top: '39%',\n      border: 0,\n    },\n    border: 0,\n    color:\n      theme.palette.type === 'light' ? 'rgba(0,0,0,.85)' : 'rgba(255,255,255,0.85)',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    WebkitFontSmoothing: 'auto',\n    letterSpacing: 'normal',\n    '& .MuiDataGrid-columnsContainer': {\n      backgroundColor: theme.palette.type === 'light' ? '#fafafa' : '#1d1d1d',\n    },\n    '& .MuiDataGrid-iconSeparator': {\n      display: 'none',\n    },\n    '& .MuiDataGrid-colCell, .MuiDataGrid-cell': {\n      borderRight: `1px solid ${theme.palette.type === 'light' ? '#f0f0f0' : '#303030'\n        }`,\n    },\n    '& .MuiDataGrid-columnsContainer, .MuiDataGrid-cell': {\n      borderBottom: `1px solid ${theme.palette.type === 'light' ? '#f0f0f0' : '#303030'\n        }`,\n    },\n    '& .MuiDataGrid-cell': {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      color:\n        theme.palette.type === 'light'\n          ? 'rgba(0,0,0,.85)'\n          : 'rgba(255,255,255,0.65)',\n    },\n    '& .MuiPaginationItem-root': {\n      borderRadius: 0,\n    },\n  },\n}));\n\nconst GET_ALL_RESULTS = gql`\n{\n\tresults {\n        id\n        name\n        value\n        createdAt\n        status\n  }\n}\n`;\n\nconst DELETE_RESULT = gql`\nmutation($resultId: Int!) {\n  deleteResult(resultId: $resultId) {\n    resultId\n  }\n}\n`;\n\nconst CREATE_RESULT = gql`\nmutation($name: String!) {\n  createResult(name: $name) {\n    result {\n      id\n      name\n      value\n      createdAt\n      status\n    }\n  }\n}\n`;\n\nfunction App() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [selected, setSelected] = useState([])\n  const { loading, error, data, refetch } = useQuery(GET_ALL_RESULTS, {\n    pollInterval: 500,\n  });\n\n\n  const getChip = status => {\n    var badge = (function (status) {\n      switch (status) {\n        case \"FINISHED\":\n          return <DoneIcon />\n        case \"QUEUEING\":\n          return <HourglassEmptyIcon />\n        case \"RUNNING\":\n          return <AutorenewIcon />\n        case \"FAILED\":\n          return <CloseIcon />\n        default:\n          return <p>Wrong Status Code!</p>\n      }\n    })(status)\n    return <Chip\n      className={classes.chip}\n      avatar={badge}\n      label={status}\n      variant=\"outlined\"\n    />\n  }\n\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'ID',\n      width: 150,\n    },\n    {\n      field: 'name',\n      headerName: 'Name',\n      flex: 1,\n    },\n    {\n      field: 'value',\n      headerName: 'Value',\n      type: 'number',\n      flex: 0.5,\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      flex: 0.5,\n      renderCell: params => (\n        getChip(params.value)\n      ),\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Created At',\n      description: 'Date and time of creation.',\n      sortable: true,\n      type: 'dateTime',\n      flex: 1,\n      renderCell: params => {\n        let date = new Date(params.value)\n        return <p>{date.toUTCString()}</p>\n      }\n    },\n  ];\n\n\n  const [deleteResult] = useMutation(DELETE_RESULT, {\n    onCompleted: data => {\n      setSelected([])\n    },\n    update: (cache, result) => handleUpdateCache(cache, result)\n  });\n\n  const [createResult] = useMutation(CREATE_RESULT, {\n    onCompleted: data => {\n      refetch()\n    },\n    update: (cache, result) => handleUpdateCreateCache(cache, result)\n  });\n\n\n  const handleUpdateCache = (cache, { data: { deleteResult } }) => {\n    const data = cache.readQuery({\n      query: GET_ALL_RESULTS,\n    });\n    const index = data.results.findIndex(\n      result => Number(result.id) === deleteResult.resultId\n    );\n    const results = [\n      ...data.results.slice(0, index),\n      ...data.results.slice(index + 1)\n    ];\n    cache.writeQuery({\n      query: GET_ALL_RESULTS,\n      data: { results }\n    });\n  };\n\n  const handleUpdateCreateCache = (cache, { data: { createResult } }) => {\n    const data = cache.readQuery({\n      query: GET_ALL_RESULTS,\n    });\n    const results = data.results.concat(createResult.result);\n    cache.writeQuery({\n      query: GET_ALL_RESULTS,\n      data: { results }\n    });\n  };\n\n  const handleClose = () => setOpen(false)\n\n  const handleDelete = () => {\n    selected.forEach(id => {\n      // Remove selected rows\n      deleteResult({ variables: { resultId: id } })\n    })\n  }\n\n  const handleCreate = () => {\n    // Create result\n    createResult({ variables: { name } })\n    // We can move this to completed inside useMutation\n    setName(\"\")\n    setOpen(false)\n  }\n\n  const Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  if (loading) return <div className={classes.spinner}> <MetroSpinner size={60} color=\"SlateGrey\" loading={loading} /></div>;\n  if (error) return <Alert severity=\"error\">{error.message}</Alert>;\n\n\n  return (\n    <div>\n      <Typography className={classes.title} variant=\"h2\" component=\"h2\">\n        Test Runs\n      </Typography>\n      <div className={classes.buttons}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          className={classes.button}\n          startIcon={<DeleteIcon />}\n          onClick={() => handleDelete()}\n        >\n          Delete\n      </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          onClick={() => setOpen(true)}\n        >\n          Create\n      </Button>\n      </div>\n      <div style={{ height: 800, width: '100%', }}>\n        <DataGrid\n          className={classes.root}\n          hideFooterPagination\n          showToolbar\n          hideFooterRowCount\n          disableSelectionOnClick\n          autoHeight\n          checkboxSelection\n          rowsPerPageOptions={[]}\n          rows={data ? data.results : []}\n          columns={columns}\n          onSelectionChange={e => setSelected(e.rowIds)}\n          components={{\n            noRowsOverlay: CustomNoRowsOverlay,\n          }}\n        />\n      </div>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create Result</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Complete the data to create a result.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            fullWidth\n            onChange={e => setName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button disabled={!name.trim()} onClick={handleCreate} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider, createHttpLink } from '@apollo/client';\n\nconsole.log(process.env.NODE_ENV === 'development' ? 'Development mode' : 'Production mode')\n\nconst link = createHttpLink({\n  uri: process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:8000/graphql/' : 'https://backend-django-task-queues.herokuapp.com/graphql/',\n  credentials: 'same-origin'\n});\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          results: {\n            merge(existing, incoming) {\n              return incoming\n            }\n          },\n        }\n      }\n    }\n  }),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}