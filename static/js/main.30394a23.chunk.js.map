{"version":3,"sources":["components/AceEditor.js","components/NewTestDialog.js","components/TopButtons.js","components/NoRowsOverlay.js","components/PreviewCode/PreviewCode.js","components/PreviewCode/Dialog.js","graphql/query.js","graphql/mutation.js","App.js","reportWebVitals.js","index.js"],"names":["JuliaEditor","code","setCode","placeholder","mode","theme","name","onChange","e","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","NewTestDialog","open","setName","setOpen","handleCreate","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","target","DialogActions","Button","onClick","color","disabled","trim","useStyles","makeStyles","buttons","display","justifyContent","padding","TopButtons","numElemsSelected","handleDelete","classes","className","variant","startIcon","root","flexDirection","fill","palette","type","fillOpacity","marginTop","spacing","CustomNoRowsOverlay","width","height","viewBox","aria-hidden","focusable","fillRule","transform","cx","cy","rx","ry","d","SyntaxHighlighter","registerLanguage","julia","PreviewCode","language","style","github","wrapLines","PreviewDialog","maxWidth","dividers","GET_ALL_RESULTS","gql","DELETE_RESULT","CREATE_RESULT","title","textAlign","spinner","alignItems","chip","minWidth","fontWeight","backgroundColor","border","borderRadius","borderColor","position","borderTop","borderLeft","opacity","transition","content","top","left","fontFamily","join","WebkitFontSmoothing","letterSpacing","borderRight","borderBottom","App","useState","openCode","setOpenCode","previewCode","setPreviewCode","selected","setSelected","useQuery","pollInterval","loading","error","data","refetch","columns","field","headerName","flex","renderCell","params","htmlFor","IconButton","aria-label","component","toExponential","status","badge","Chip","avatar","getChip","description","sortable","date","Date","toUTCString","useMutation","onCompleted","update","cache","result","handleUpdateCache","deleteResult","handleUpdateCreateCache","createResult","readQuery","query","index","results","findIndex","Number","resultId","slice","writeQuery","concat","Alert","props","elevation","size","severity","message","Typography","length","forEach","variables","hideFooterPagination","showToolbar","hideFooterRowCount","disableSelectionOnClick","autoHeight","checkboxSelection","rowsPerPageOptions","rows","onSelectionModelChange","selectionModel","components","noRowsOverlay","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","link","createHttpLink","uri","credentials","client","ApolloClient","InMemoryCache","typePolicies","Query","fields","merge","existing","incoming","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30394a23.chunk.js","sourcesContent":["import AceEditor from \"react-ace\";\n\nimport 'brace/mode/julia';\nimport 'brace/snippets/julia'\nimport 'brace/theme/github';\nimport \"brace/ext/language_tools\";\nimport \"brace/ext/searchbox\";\n\nexport function JuliaEditor({ code, setCode }) {\n    let placeholder = `\n    Write the Julia code you want to run.\n\n    An example code is the following:\n    \n    using Statistics\n    using DifferentialEquations\n    \n    α=1\n    β=1\n    u₀=1/2\n    f(u,p,t) = α*u\n    g(u,p,t) = β*u\n    dt = 1//2^(4)\n    tspan = (0.0,1.0)\n    prob = SDEProblem(f,g,u₀,(0.0,1.0))\n    ensembleprob = EnsembleProblem(prob)\n    sol = solve(ensembleprob; trajectories=1000)\n    mean(sol[:, end])\n    `\n    return (\n        <AceEditor\n            placeholder={placeholder}\n            mode=\"julia\"\n            theme=\"github\"\n            name=\"blah2\"\n            onChange={e => setCode(e)}\n            fontSize={14}\n            showPrintMargin={true}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={code}\n            setOptions={{\n                enableBasicAutocompletion: true,\n                enableLiveAutocompletion: true,\n                enableSnippets: true,\n                showLineNumbers: true,\n                tabSize: 4,\n            }} />\n    )\n}","import { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\n// Import My Components\nimport { JuliaEditor } from './AceEditor'\n\nexport default function NewTestDialog({ open, name, code, setName, setCode, setOpen, handleCreate }) {\n    const handleClose = () => {\n        setName(\"\")\n        setCode(\"\")\n        setOpen(false)\n    }\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Create Result</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Complete the data to create a result.\n          </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    fullWidth\n                    onChange={e => setName(e.target.value)}\n                />\n                <br /><br />\n                <JuliaEditor code={code} setCode={setCode} />\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button disabled={!name.trim() || !code.trim()} onClick={handleCreate} color=\"primary\">\n                    Create\n          </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    buttons: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        padding: 10,\n\n    }\n}));\n\nexport default function TopButtons({ numElemsSelected, handleDelete, setOpen }) {\n    const classes = useStyles();\n    return (\n        <div className={classes.buttons}>\n            <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                // className={classes.button}\n                startIcon={<DeleteIcon />}\n                onClick={() => {\n                    handleDelete()\n                }}\n                disabled={numElemsSelected === 0 ? true : false}\n            >\n                Delete\n      </Button>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                // className={classes.button}\n                startIcon={<AddIcon />}\n                onClick={() => setOpen(true)}\n            >\n                Create\n      </Button>\n        </div>\n    )\n}","import * as React from 'react';\nimport { GridOverlay } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexDirection: 'column',\n        '& .ant-empty-img-1': {\n            fill: theme.palette.type === 'light' ? '#aeb8c2' : '#262626',\n        },\n        '& .ant-empty-img-2': {\n            fill: theme.palette.type === 'light' ? '#f5f5f7' : '#595959',\n        },\n        '& .ant-empty-img-3': {\n            fill: theme.palette.type === 'light' ? '#dce0e6' : '#434343',\n        },\n        '& .ant-empty-img-4': {\n            fill: theme.palette.type === 'light' ? '#fff' : '#1c1c1c',\n        },\n        '& .ant-empty-img-5': {\n            fillOpacity: theme.palette.type === 'light' ? '0.8' : '0.08',\n            fill: theme.palette.type === 'light' ? '#f5f5f5' : '#fff',\n        },\n    },\n    label: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function CustomNoRowsOverlay() {\n    const classes = useStyles();\n\n    return (\n        <GridOverlay className={classes.root}>\n            <svg\n                width=\"120\"\n                height=\"100\"\n                viewBox=\"0 0 184 152\"\n                aria-hidden\n                focusable=\"false\"\n            >\n                <g fill=\"none\" fillRule=\"evenodd\">\n                    <g transform=\"translate(24 31.67)\">\n                        <ellipse\n                            className=\"ant-empty-img-5\"\n                            cx=\"67.797\"\n                            cy=\"106.89\"\n                            rx=\"67.797\"\n                            ry=\"12.668\"\n                        />\n                        <path\n                            className=\"ant-empty-img-1\"\n                            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n                        />\n                        <path\n                            className=\"ant-empty-img-2\"\n                            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n                        />\n                        <path\n                            className=\"ant-empty-img-3\"\n                            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n                        />\n                    </g>\n                    <path\n                        className=\"ant-empty-img-3\"\n                        d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n                    />\n                    <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n                        <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n                        <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n                    </g>\n                </g>\n            </svg>\n            <div className={classes.label}>No Rows</div>\n        </GridOverlay>\n    );\n}","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport julia from 'react-syntax-highlighter/dist/esm/languages/hljs/julia';\nimport github from 'react-syntax-highlighter/dist/esm/styles/hljs/github';\n\nSyntaxHighlighter.registerLanguage('julia', julia);\n\nexport const PreviewCode = ({ code }) => {\n    return (\n        <SyntaxHighlighter language=\"julia\" style={github} showLineNumbers wrapLines>\n            {code}\n        </SyntaxHighlighter>\n    );\n};","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\n\n// Import My Components\nimport { PreviewCode } from './PreviewCode';\n\nexport function PreviewDialog({ open, code, onClose }) {\n    const handleClose = () => {\n        onClose(false)\n    }\n    return (\n        <Dialog\n            open={open}\n            maxWidth={'sm'}\n            fullWidth\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">Preview Code</DialogTitle>\n            <DialogContent dividers>\n                <PreviewCode code={code} />\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import { gql } from '@apollo/client';\n\nexport const GET_ALL_RESULTS = gql`\n{\n\tresults {\n        id\n        name\n        value\n        code\n        createdAt\n        status\n  }\n}\n`;","import { gql } from '@apollo/client';\n\nexport const DELETE_RESULT = gql`\nmutation($resultId: Int!) {\n  deleteResult(resultId: $resultId) {\n    resultId\n  }\n}\n`;\n\nexport const CREATE_RESULT = gql`\nmutation($name: String!, $code: String!) {\n  createResult(name: $name, code: $code) {\n    result {\n      id\n      name\n      value\n      code\n      createdAt\n      status\n    }\n  }\n}\n`;\n","import { useState } from 'react'\nimport './App.css';\n// Material UI - Main components\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Chip, IconButton } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport MuiAlert from '@material-ui/lab/Alert';\n// Material UI - Icons\nimport DoneIcon from '@material-ui/icons/Done';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CodeIcon from '@material-ui/icons/Code';\n// Apollo Client\nimport { useQuery, useMutation } from '@apollo/client';\n// Bit.dev components\nimport { Github } from '@mattborghi/sciquant.ui.github';\n// Other packages\nimport { MetroSpinner } from \"react-spinners-kit\";\n\n// Load our components\nimport NewTestDialog from './components/NewTestDialog';\nimport TopButtons from './components/TopButtons';\nimport CustomNoRowsOverlay from './components/NoRowsOverlay';\nimport { PreviewDialog } from './components/PreviewCode/Dialog';\n\n// Load graphql queries\nimport { GET_ALL_RESULTS } from './graphql/query'\nimport { CREATE_RESULT, DELETE_RESULT } from './graphql/mutation'\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    textAlign: \"center\",\n  },\n  spinner: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh'\n  },\n  chip: {\n    '& .MuiChip-label': {\n      minWidth: \"85px\"\n      // fontWeight: \"bolder\",\n    },\n  },\n  root: {\n    '& .MuiDataGrid-colCellTitle': {\n      display: \"block\",\n      textAlign: \"center\",\n      width: \"100%\",\n      fontWeight: \"bolder\",\n      fontSize: 16,\n    },\n    '& .MuiCheckbox-root svg': {\n      width: 16,\n      height: 16,\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette.type === 'light' ? '#d9d9d9' : 'rgb(67, 67, 67)'\n        }`,\n      borderRadius: 2,\n    },\n    '& .MuiCheckbox-root svg path': {\n      display: 'none',\n    },\n    '& .MuiCheckbox-root.Mui-checked:not(.MuiCheckbox-indeterminate) svg': {\n      backgroundColor: '#1890ff',\n      borderColor: '#1890ff',\n    },\n    '& .MuiCheckbox-root.Mui-checked .MuiIconButton-label:after': {\n      position: 'absolute',\n      display: 'table',\n      border: '2px solid #fff',\n      borderTop: 0,\n      borderLeft: 0,\n      transform: 'rotate(45deg) translate(-50%,-50%)',\n      opacity: 1,\n      transition: 'all .2s cubic-bezier(.12,.4,.29,1.46) .1s',\n      content: '\"\"',\n      top: '50%',\n      left: '39%',\n      width: 5.71428571,\n      height: 9.14285714,\n    },\n    '& .MuiCheckbox-root.MuiCheckbox-indeterminate .MuiIconButton-label:after': {\n      width: 8,\n      height: 8,\n      backgroundColor: '#1890ff',\n      transform: 'none',\n      top: '39%',\n      border: 0,\n    },\n    border: 0,\n    color:\n      theme.palette.type === 'light' ? 'rgba(0,0,0,.85)' : 'rgba(255,255,255,0.85)',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    WebkitFontSmoothing: 'auto',\n    letterSpacing: 'normal',\n    '& .MuiDataGrid-columnsContainer': {\n      backgroundColor: theme.palette.type === 'light' ? '#fafafa' : '#1d1d1d',\n    },\n    '& .MuiDataGrid-iconSeparator': {\n      display: 'none',\n    },\n    '& .MuiDataGrid-colCell, .MuiDataGrid-cell': {\n      borderRight: `1px solid ${theme.palette.type === 'light' ? '#f0f0f0' : '#303030'\n        }`,\n    },\n    '& .MuiDataGrid-columnsContainer, .MuiDataGrid-cell': {\n      borderBottom: `1px solid ${theme.palette.type === 'light' ? '#f0f0f0' : '#303030'\n        }`,\n    },\n    '& .MuiDataGrid-cell': {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      color:\n        theme.palette.type === 'light'\n          ? 'rgba(0,0,0,.85)'\n          : 'rgba(255,255,255,0.65)',\n    },\n    '& .MuiPaginationItem-root': {\n      borderRadius: 0,\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\")\n  const [code, setCode] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [openCode, setOpenCode] = useState(false)\n  const [previewCode, setPreviewCode] = useState(\"\")\n  const [selected, setSelected] = useState([])\n  const { loading, error, data, refetch } = useQuery(GET_ALL_RESULTS, {\n    pollInterval: 500,\n  });\n\n\n  const getChip = status => {\n    var badge = (function (status) {\n      switch (status) {\n        case \"FINISHED\":\n          return <DoneIcon />\n        case \"QUEUEING\":\n          return <HourglassEmptyIcon />\n        case \"RUNNING\":\n          return <AutorenewIcon />\n        case \"FAILED\":\n          return <CloseIcon />\n        default:\n          return <p>Wrong Status Code!</p>\n      }\n    })(status)\n    return <Chip\n      className={classes.chip}\n      avatar={badge}\n      label={status}\n      variant=\"outlined\"\n    />\n  }\n\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'ID',\n      width: 150,\n    },\n    {\n      field: 'name',\n      headerName: 'Name',\n      flex: 1,\n    },\n    {\n      field: 'code',\n      headerName: 'Code',\n      flex: 0.5,\n      renderCell: params => {\n        return (\n          <label htmlFor=\"icon-button-file\">\n            <IconButton color=\"secondary\" aria-label=\"preview code\" component=\"span\" onClick={() => {\n              setPreviewCode(params.value)\n              setOpenCode(true)\n            }}>\n              <CodeIcon />\n            </IconButton>\n          </label>\n        )\n      }\n    },\n    {\n      field: 'value',\n      headerName: 'Value',\n      type: 'number',\n      flex: 0.5,\n      renderCell: params => {\n        return params.value === null ? \"-\" : params.value.toExponential(4);\n      },\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      flex: 0.5,\n      renderCell: params => (\n        getChip(params.value)\n      ),\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Created At',\n      description: 'Date and time of creation.',\n      sortable: true,\n      type: 'dateTime',\n      flex: 1,\n      renderCell: params => {\n        let date = new Date(params.value)\n        return <p>{date.toUTCString()}</p>\n      }\n    },\n  ];\n\n\n  const [deleteResult] = useMutation(DELETE_RESULT, {\n    onCompleted: data => {\n      setSelected([])\n    },\n    update: (cache, result) => handleUpdateCache(cache, result)\n  });\n\n  const [createResult] = useMutation(CREATE_RESULT, {\n    onCompleted: data => {\n      refetch()\n    },\n    update: (cache, result) => handleUpdateCreateCache(cache, result)\n  });\n\n\n  const handleUpdateCache = (cache, { data: { deleteResult } }) => {\n    const data = cache.readQuery({\n      query: GET_ALL_RESULTS,\n    });\n    const index = data.results.findIndex(\n      result => Number(result.id) === deleteResult.resultId\n    );\n    const results = [\n      ...data.results.slice(0, index),\n      ...data.results.slice(index + 1)\n    ];\n    cache.writeQuery({\n      query: GET_ALL_RESULTS,\n      data: { results }\n    });\n  };\n\n  const handleUpdateCreateCache = (cache, { data: { createResult } }) => {\n    const data = cache.readQuery({\n      query: GET_ALL_RESULTS,\n    });\n    const results = data.results.concat(createResult.result);\n    cache.writeQuery({\n      query: GET_ALL_RESULTS,\n      data: { results }\n    });\n  };\n\n  const handleDelete = () => {\n    selected.forEach(id => {\n      // Remove selected rows\n      deleteResult({ variables: { resultId: id } })\n    })\n  }\n\n  const handleCreate = () => {\n    // Create result\n    createResult({ variables: { name, code } })\n    // We can move this to completed inside useMutation\n    setName(\"\")\n    setCode(\"\")\n    setOpen(false)\n  }\n\n  const Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  if (loading) return <div className={classes.spinner}> <MetroSpinner size={60} color=\"SlateGrey\" loading={loading} /></div>;\n  if (error) return <Alert severity=\"error\">{error.message}</Alert>;\n\n\n  return (\n    <div>\n\n      <Typography className={classes.title} variant=\"h2\" component=\"h2\">\n        Test Runs\n      </Typography>\n\n      <TopButtons numElemsSelected={selected.length} handleDelete={handleDelete} setOpen={setOpen} />\n\n      {/* Table */}\n      <div style={{ height: 800, width: '100%', }}>\n        <DataGrid\n          className={classes.root}\n          hideFooterPagination\n          showToolbar\n          hideFooterRowCount\n          disableSelectionOnClick\n          autoHeight\n          checkboxSelection\n          rowsPerPageOptions={[]}\n          rows={data ? data.results : []}\n          columns={columns}\n          onSelectionModelChange={e => {\n            setSelected(e.selectionModel)\n          }}\n          components={{\n            noRowsOverlay: CustomNoRowsOverlay,\n          }}\n        />\n      </div>\n\n      {/* Github ribbon */}\n      <Github url=\"https://github.com/mattborghi/background-tasks-queue\" />\n\n      { openCode && <PreviewDialog code={previewCode} open={openCode} onClose={setOpenCode} />}\n\n      {/* PopUp window */}\n      <NewTestDialog\n        open={open}\n        name={name}\n        code={code}\n        setName={setName}\n        setCode={setCode}\n        setOpen={setOpen}\n        handleCreate={handleCreate}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider, createHttpLink } from '@apollo/client';\n\nconsole.log(process.env.NODE_ENV === 'development' ? 'Development mode' : 'Production mode')\n\nconst link = createHttpLink({\n  uri: process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:8000/graphql/' : 'https://backend-django-task-queues.herokuapp.com/graphql/',\n  credentials: 'same-origin'\n});\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          results: {\n            merge(existing, incoming) {\n              return incoming\n            }\n          },\n        }\n      }\n    }\n  }),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}